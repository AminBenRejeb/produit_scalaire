// creation de la procedure dot_product qui calcule le produit scalaire

PROCEDURE dot_product (v1: ARRAY_OF FLOAT, v2 : ARRAY_OF FLOAT, VAR ps: FLOAT)
VAR
  len1, len2 ,i : INTEGER ;

BEGIN
   
   len1:= v1.length ;
   len2:= v2.length;
   
   // vérifier la taille de deux vecteurs qui doivent avoir la même dimension

   IF (len1 <> len2) THEN
    
    write ( "ERREUR! Les deux vecteures doivent avoir la même dimension")

   END_IF

   // calcul de produit scalaire

   ps := 0 ;

   FOR i FROM 0 TO len1-1   DO
    
    ps = ps + ( v1[i] * v2[i] );
   
   END_FOR
   
   write(ps);
END

// procedure pour vérifier si les deux vecteurs sont orthogonaux

PROCEDURE si_orthogonaux (v1: ARRAY_OF FLOAT, v2 : ARRAY_OF FLOAT, VAR ps: FLOAT)
 VAR
  
  ort : BOOLEAN := false ;

BEGIN

   IF (dot_product (v1: ARRAY_OF FLOAT, v2 : ARRAY_OF FLOAT, VAR ps: FLOAT)=0) THEN
    
    ort = TRUE;
   ELSE
    ort = FALSE ;
   END_IF


// Algorithme principal pour vérifier si les vecteurs sont orthogonaux

ALGORITHM Orthogonaux
VAR
    

BEGIN
    
    dot_product (v1: ARRAY_OF FLOAT, v2 : ARRAY_OF FLOAT, VAR ps: FLOAT);

    IF (si_orthogonaux (v1: ARRAY_OF FLOAT, v2 : ARRAY_OF FLOAT, VAR ps: FLOAT)) THEN
      
      Write("les deux vecteurs sont orthogonaux");

    ELSE
      
      Write("les deux vecteurs ne sont pas orthogonaux");

    END_IF
END